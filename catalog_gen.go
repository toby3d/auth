// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"ru": &dictionary{index: ruIndex, data: ruData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Allow":                 4,
	"Authorize %s":          0,
	"Authorize application": 1,
	"Choose your scopes":    2,
	"Deny":                  3,
	"Recipient":             7,
	"Resource":              8,
	"Send":                  9,
	"Sign In":               5,
	"TicketAuth":            6,
}

var enIndex = []uint32{ // 11 elements
	0x00000000, 0x00000010, 0x00000026, 0x00000039,
	0x0000003e, 0x00000044, 0x0000004c, 0x00000057,
	0x00000061, 0x0000006a, 0x0000006f,
} // Size: 68 bytes

const enData string = "" + // Size: 111 bytes
	"\x02Authorize %[1]s\x02Authorize application\x02Choose your scopes\x02De" +
	"ny\x02Allow\x02Sign In\x02TicketAuth\x02Recipient\x02Resource\x02Send"

var ruIndex = []uint32{ // 11 elements
	0x00000000, 0x0000001f, 0x0000004d, 0x0000008e,
	0x0000009f, 0x000000b2, 0x000000bd, 0x000000bd,
	0x000000bd, 0x000000bd, 0x000000bd,
} // Size: 68 bytes

const ruData string = "" + // Size: 189 bytes
	"\x02Авторизовать %[1]s\x02Авторизовать приложение\x02Выбери предоставляе" +
	"мые разрешения\x02Отказать\x02Разрешить\x02Войти"

	// Total table size 436 bytes (0KiB); checksum: BBD74FCF
