// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"ru": &dictionary{index: ruIndex, data: ruData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Allow":                     6,
	"Authorize":                 2,
	"Authorize %s":              0,
	"Authorize application":     1,
	"Check your scopes":         4,
	"Create a new remote token": 8,
	"Deny":                      5,
	"Send":                      9,
	"Sign In":                   7,
	"application":               3,
}

var enIndex = []uint32{ // 11 elements
	0x00000000, 0x00000010, 0x00000026, 0x00000030,
	0x0000003c, 0x0000004e, 0x00000053, 0x00000059,
	0x00000061, 0x0000007b, 0x00000080,
} // Size: 68 bytes

const enData string = "" + // Size: 128 bytes
	"\x02Authorize %[1]s\x02Authorize application\x02Authorize\x02application" +
	"\x02Check your scopes\x02Deny\x02Allow\x02Sign In\x02Create a new remote" +
	" token\x02Send"

var ruIndex = []uint32{ // 11 elements
	0x00000000, 0x00000000, 0x0000002e, 0x0000002e,
	0x0000002e, 0x00000057, 0x00000068, 0x0000007b,
	0x00000086, 0x00000086, 0x00000086,
} // Size: 68 bytes

const ruData string = "" + // Size: 134 bytes
	"\x02Авторизовать приложение\x02Проверь права доступа\x02Отказать\x02Разр" +
	"ешить\x02Войти"

	// Total table size 398 bytes (0KiB); checksum: 1F3647E6
